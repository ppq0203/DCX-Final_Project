<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.momento.exam.mapper.ExamMapper">
	<!-- xml파일을 사용할 mapper가 있는 경로 -->
	<!-- Heidisql연결후 입력 저장-->
	<insert id="insertExam" parameterType="project.momento.exam.dto.ExamDto" useGeneratedKeys="true" keyProperty="returnId">
		INSERT INTO LMS_EXAM (
			PK_SUBJECT_SEQ, 
			REGIST_ID, 
			REGIST_DT
			)
	  		VALUES (
	  		#{pkSubjectSeq}, 
	  		#{registId}, 
	  		SYSDATE()
  		)
		<selectKey keyProperty="returnId" resultType="java.lang.Integer" order="AFTER">
        SELECT LAST_INSERT_ID() AS returnId
    	</selectKey>
	</insert>
	<insert id="insertExamDetail" parameterType="project.momento.exam.dto.ExamDto">
		INSERT INTO LMS_EXAM_DETAIL (
			PK_SUBJECT_SEQ, 
			PK_EXAM_SEQ,
			TITLE, 
			CONTENTS, 
			REGIST_ID, 
			REGIST_DT, 
			PK_FILE_SEQ
			)
	  		VALUES (
	  		#{pkSubjectSeq}, 
	  		#{pkExamSeq}, 
	  		#{title}, 
	  		#{contents}, 
	  		#{registId}, 
	  		SYSDATE(), 
	  		#{pkFileSeq}
  		)

	</insert>
	<select id="getExamList" parameterType="project.momento.exam.dto.ExamDto" resultType="project.momento.exam.dto.ExamDto">
			 SELECT 
			 	PK_EXAM_SEQ 	AS pkExamSeq,
		         PK_SUBJECT_SEQ AS pkSubjectSeq,
		         EXAM_DIVN		AS examDivn,
		         REGIST_ID 		AS registId,
		         REGIST_DT 		AS registDt,
		         UPDATE_ID 		AS updateId,
		         UPDATE_DT 		AS updateDt
			  FROM LMS_EXAM
			  WHERE PK_SUBJECT_SEQ = #{pkSubjectSeq}
			 <if test="userDivn == 'std'">
			    AND #{pkUserSeq} NOT IN (SELECT WA.PK_USER_SEQ FROM LMS_EXAM_RESULT WA)
			</if>
	</select>
	<select id="selectExamDetailList" parameterType="project.momento.exam.dto.ExamDto" resultType="project.momento.exam.dto.ExamDto">
		SELECT 
			 	A.PK_EXAM_SEQ 			AS pkExamSeq
			 	, A.PK_EXAM_DETAIL_SEQ	AS pkExamDetailSeq
		         , A.PK_SUBJECT_SEQ 	AS pkSubjectSeq
		         , A.TITLE				AS title
		         , A.CONTENTS			AS contents
		         , A.REGIST_ID 			AS registId
		         , A.REGIST_DT 			AS registDt
		         , A.UPDATE_ID 			AS updateId
		         , A.UPDATE_DT 			AS updateDt
		         , B.FILE_NM			AS fileNm
		         , A.PK_FILE_SEQ		AS pkFileSeq
		         , B.FILE_SIZE			AS fileSize
		         , B.FILE_PATH			AS filePath
		         , B.FILE_ORIGINAL_PATH	AS fileOriginalPath
		         , B.FILE_DOWN_CNT		AS fileDownCnt
		         , B.FILE_THUM_WID_SIZE	AS fileThumWidSize
		         , B.FILE_THUM_HEI_SIZE	AS fileThumHeiSize
		         , B.FILE_EXTENSION		AS fileExtension
			  FROM LMS_EXAM_DETAIL A
			  LEFT JOIN FILE B
			  ON A.PK_FILE_SEQ = B.PK_FILE_SEQ
			  WHERE PK_EXAM_SEQ = #{pkExamSeq}
	</select>
	<select id="getExamResultList" parameterType="project.momento.exam.dto.ExamDto" resultType="project.momento.exam.dto.ExamDto">
		SELECT 
			A.PK_EXAM_SEQ 																			AS pkExamSeq
			, A.PK_EXAM_DETAIL_SEQ																	AS pkExamDetailSeq
			, A.PK_SUBJECT_SEQ 																		AS pkSubjectSeq
			, (SELECT SB.SUBJECT_NAME FROM SUBJECT SB WHERE SB.PK_SUBJECT_SEQ = A.PK_SUBJECT_SEQ)	AS subjectName
			, A.PK_EXAM_RESULT_SEQ																	AS pkExamResultSeq
			, A.PK_USER_SEQ																			AS pkUserSeq 
			, (SELECT SA.NAME FROM USER SA WHERE A.PK_USER_SEQ = SA.PK_USER_SEQ)					AS name
			, A.REGIST_ID 																			AS registId
			, A.REGIST_DT 																			AS registDt
			, A.UPDATE_ID 																			AS updateId
			, A.UPDATE_DT 																			AS updateDt
		FROM LMS_EXAM_RESULT A
		INNER JOIN LMS_EXAM B
		ON A.PK_EXAM_SEQ= B.PK_EXAM_SEQ
		WHERE 1=1
		<if test="userDivn == 'std'">
			    AND A.PK_USER_SEQ = #{pkUserSeq}
			</if>
		GROUP BY A.PK_USER_SEQ
	</select>
	<select id="selectExamResultDetailList" parameterType="project.momento.exam.dto.ExamDto" resultType="project.momento.exam.dto.ExamDto">
		SELECT 
			A.PK_EXAM_SEQ 																			AS pkExamSeq
			, A.PK_EXAM_DETAIL_SEQ																	AS pkExamDetailSeq
			, A.PK_SUBJECT_SEQ 																		AS pkSubjectSeq
			, (SELECT SB.SUBJECT_NAME FROM SUBJECT SB WHERE SB.PK_SUBJECT_SEQ = A.PK_SUBJECT_SEQ)	AS subjectName
			, A.PK_EXAM_RESULT_SEQ																	AS pkExamResultSeq
			, A.PK_USER_SEQ																			AS pkUserSeq 
			, (SELECT SA.NAME FROM USER SA WHERE A.PK_USER_SEQ = SA.PK_USER_SEQ)					AS name
			, A.ANSWER																				AS answer
			, (SELECT SC.TITLE FROM LMS_EXAM_DETAIL SC WHERE SC.PK_EXAM_DETAIL_SEQ = A.PK_EXAM_DETAIL_SEQ) AS title
			, (SELECT SC.CONTENTS FROM LMS_EXAM_DETAIL SC WHERE SC.PK_EXAM_DETAIL_SEQ = A.PK_EXAM_DETAIL_SEQ) AS contents
			, A.RESULT_DIVN																			AS resultDivn
			, A.ANS_RESULT																			AS ansResult
			, A.REGIST_ID 																			AS registId
			, A.REGIST_DT 																			AS registDt
			, A.UPDATE_ID 																			AS updateId
			, A.UPDATE_DT 																			AS updateDt
		FROM LMS_EXAM_RESULT A
		INNER JOIN LMS_EXAM B
		ON A.PK_EXAM_SEQ= B.PK_EXAM_SEQ
		WHERE A.PK_USER_SEQ = #{pkUserSeq}
	</select>
	
	<insert id="insertResult" parameterType="project.momento.exam.dto.ExamDto">
	    INSERT INTO LMS_EXAM_RESULT
  			(
  			PK_EXAM_SEQ
  			, PK_EXAM_DETAIL_SEQ
  			, PK_SUBJECT_SEQ
  			, PK_USER_SEQ
  			, ANSWER
  			, REGIST_ID
  			, REGIST_DT
  			)
  		VALUES
  			(
  			#{pkExamSeq}
  			, #{pkExamDetailSeq}
  			, #{pkSubjectSeq}
  			, #{pkUserSeq}
  			, #{answer}
  			, #{registId}
  			, SYSDATE()
  			)
	</insert>
	<update id="startExam" parameterType="project.momento.exam.dto.ExamDto">
		UPDATE LMS_EXAM
		SET EXAM_DIVN = 'Y'
		WHERE PK_EXAM_SEQ = #{pkExamSeq}
	</update>
	<update id="updateScore" parameterType="project.momento.exam.dto.ExamDto">
		UPDATE LMS_EXAM_RESULT
		SET 
		RESULT_DIVN = 'Y'
		, ANS_RESULT = #{ansResult}
		WHERE PK_EXAM_RESULT_SEQ = #{pkExamResultSeq}
	</update>
	<delete id="deleteExamDetail" parameterType="project.momento.exam.dto.ExamDto">
		DELETE FROM LMS_EXAM_DETAIL
  		WHERE PK_EXAM_SEQ = #{pkExamSeq}
	</delete>
	<delete id="deleteExam" parameterType="project.momento.exam.dto.ExamDto">
		DELETE FROM LMS_EXAM
  		WHERE PK_EXAM_SEQ = #{pkExamSeq}
	</delete>
</mapper>